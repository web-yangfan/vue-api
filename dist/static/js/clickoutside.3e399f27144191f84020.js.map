{"version":3,"sources":["webpack:///./src/module/vue2/components/directives/clickoutside/clickoutside.js"],"names":["Object","defineProperty","__webpack_exports__","value","bind","el","binding","vnode","documentHandler","e","contains","target","expression","__vueClickOutside__","document","addEventListener","unbind","removeEventListener"],"mappings":"oDAAAA,OAAAC,eAAAC,EAAA,cAAAC,OAAA,IACAD,EAAA,SACEE,KADa,SACPC,EAAIC,EAASC,GACjB,SAASC,EAAiBC,GAGxB,GAAIJ,EAAGK,SAASD,EAAEE,QAChB,OAAO,EAGLL,EAAQM,YAEVN,EAAQH,MAAMM,GAIlBJ,EAAGQ,oBAAsBL,EACzBM,SAASC,iBAAiB,QAASP,IAErCQ,OAlBa,SAkBLX,EAAIC,GAEVQ,SAASG,oBAAoB,QAASZ,EAAGQ,4BAClCR,EAAGQ","file":"static/js/clickoutside.3e399f27144191f84020.js","sourcesContent":["// 外部关闭的下拉菜单\nexport default {\n  bind (el, binding, vnode) {\n    function documentHandler (e) {\n      // contains 是用来判断A元素是否包含B元素\n      // 判断点击区域是否是指令所在的元素内部，是，就跳出函数，不往下执行\n      if (el.contains(e.target)) {\n        return false\n      }\n      // 判断当前指令有没有写表达式\n      if (binding.expression) {\n        // 执行当前上下文 methods 中指定的函数\n        binding.value(e)\n      }\n    }\n    // 在自定义指令中，不能用this.xxx的形式在上下文中声明一个变量，所以用了el.__vueClickOutside__引用了documentHandler，这样可以在unbind钩子里移除对document的click对象\n    el.__vueClickOutside__ = documentHandler\n    document.addEventListener('click', documentHandler)\n  },\n  unbind (el, binding) {\n    // 移除事件，如果不移除，当组件或元素销毁时，它仍然存在于内存中\n    document.removeEventListener('click', el.__vueClickOutside__)\n    delete el.__vueClickOutside__\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/module/vue2/components/directives/clickoutside/clickoutside.js"],"sourceRoot":""}